#define ENCODER_0INTERRUPT_PIN 18 // pin that interrupts on both rising and falling of A and B channels of encoder
#define ENCODER_1INTERRUPT_PIN 19
#define ENCODER_2INTERRUPT_PIN 20

#define FORWARD 0
#define BACKWARDS 1


volatile long encoderCounts[] = {0,0,0};
bool motorDir[3] = {FORWARD,FORWARD,FORWARD};

const int motorPWMPins[3] = {8,9,10};
const int motorDirPins[3] = {29,28,27};

void motor(int,int,bool);


void setup() {
  
  Serial.begin(1000000);
  
  //Left Motor
  pinMode(motorPWMPins[0], OUTPUT);
  pinMode(motorDirPins[0], OUTPUT); //LOW=CCW HIGH=CW

  //Right Motor
  pinMode(motorPWMPins[1], OUTPUT);
  pinMode(motorDirPins[1], OUTPUT);
 
  //Rear Motor
  pinMode(motorPWMPins[2], OUTPUT);
  pinMode(motorDirPins[2], OUTPUT);
  
  while (! Serial);
  attachInterrupt(digitalPinToInterrupt(ENCODER_0INTERRUPT_PIN),encoder0_ISR,CHANGE);
  attachInterrupt(digitalPinToInterrupt(ENCODER_1INTERRUPT_PIN),encoder1_ISR,CHANGE);
  attachInterrupt(digitalPinToInterrupt(ENCODER_1INTERRUPT_PIN),encoder2_ISR,CHANGE);
  
}

void loop() {
    
    motor(0,55,FORWARD);
    delay(500);
    Serial.println(encoderCounts[2]);
  
}

void encoder0_ISR()
{
  noInterrupts();
  if(!motorDir[0])
  {
    encoderCounts[0]++;
    
  }
  else
  {
    encoderCounts[0]--;
  }
  Serial.print("Encoder 0: ");
  Serial.println(encoderCounts[0]);
  interrupts();
}
void encoder1_ISR()
{
   noInterrupts();
  if(!motorDir[1])
  {
    encoderCounts[1]++;
    
  }
  else
  {
    encoderCounts[1]--;
  }
  Serial.print("Encoder 1: ");
  Serial.println(encoderCounts[1]);
  interrupts();
}
void encoder2_ISR()
{
  noInterrupts();
  if(!motorDir[2])
  {
    encoderCounts[2]++;
  }
  else
  {
    encoderCounts[2]--;
  }
  
  
  interrupts();

}

void motor(int motorNumber, int pwm, bool dir)
{

    motorDir[motorNumber] = dir;
  
  digitalWrite(motorDirPins[motorNumber],dir);
  // could input check here for less than 255
  analogWrite(motorPWMPins[motorNumber], pwm);
//  Serial.print("Motor: ");
//  Serial.print(motorNumber);
//  Serial.print(" Speed: ");
//  Serial.print(pwm);
//  Serial.print(" Direction: ");
//  Serial.println(dir);
  
}

